<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>org-page</title>
    <link>http://tsubasawp.github.io/</link>
    <description>static site generator</description>
    <pubDate>Tue, 08 Mar 2016 23:06:18 CST</pubDate>
    <lastBuildDate>Tue, 08 Mar 2016 23:06:18 CST</lastBuildDate>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>Org-page static site generator (https://github.com/kelvinh/org-page)</generator>
    <item>
      <title>princples and practice using c++ ch3 reading note</title>
      <link>http://tsubasawp.github.io/blog/2016/03/08/princples-and-practice-using-c++-ch3-reading-note/</link>
      <description><![CDATA[<div>
<div class="post">
<h1>princples and practice using c++ ch3 reading note</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#orgheadline1">1. c++ 11</a></li>
<li><a href="#orgheadline2">2. Names</a></li>
<li><a href="#orgheadline3">3. Types and objects</a></li>
<li><a href="#orgheadline6">4. Type safety</a>
<ul>
<li><a href="#orgheadline4">4.1. Safe conversions</a></li>
<li><a href="#orgheadline5">4.2. Unsafe conversions</a></li>
</ul>
</li>
</ul>
</div>
</div>
<p>
3-9章比较基础, 仅凭喜好选择一些内容记录.
</p>

<div id="outline-container-orgheadline1" class="outline-2">
<h2 id="orgheadline1"><span class="section-number-2">1</span> c++ 11</h2>
<div class="outline-text-2" id="text-1">
<p>
{}: 初始化运算符. 它不允许不安全类型转换.
</p>
</div>
</div>

<div id="outline-container-orgheadline2" class="outline-2">
<h2 id="orgheadline2"><span class="section-number-2">2</span> Names</h2>
<div class="outline-text-2" id="text-2">
<p>
起名的注意事项:
</p>
<ul class="org-ul">
<li>尽量不要使用下划线开头的变量名</li>
<li>名字不要太长</li>
<li>不要全部大写, 全大写变量是为宏定义保留的</li>
<li>起名要有意义</li>
</ul>
</div>
</div>

<div id="outline-container-orgheadline3" class="outline-2">
<h2 id="orgheadline3"><span class="section-number-2">3</span> Types and objects</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li>type: 一种逻辑结构, 它定义了一系列值和操作.</li>
<li>object: 一块内存, 存储着某个类型(type)的值(value)</li>
<li>value: 一些内存中的二进制数据, 可用type来解析</li>
<li>variable: 一个有名字的object</li>
<li>declaration: 为object命名</li>
<li>definition: 为object分配内存</li>
</ul>
</div>
</div>

<div id="outline-container-orgheadline6" class="outline-2">
<h2 id="orgheadline6"><span class="section-number-2">4</span> Type safety</h2>
<div class="outline-text-2" id="text-4">
<p>
c++不是类型安全的, 所以要格外小心
</p>
</div>

<div id="outline-container-orgheadline4" class="outline-3">
<h3 id="orgheadline4"><span class="section-number-3">4.1</span> Safe conversions</h3>
<div class="outline-text-3" id="text-4-1">
<ul class="org-ul">
<li>bool to char/int/double</li>
<li>char to int/double</li>
<li>int to double</li>
</ul>
</div>
</div>

<div id="outline-container-orgheadline5" class="outline-3">
<h3 id="orgheadline5"><span class="section-number-3">4.2</span> Unsafe conversions</h3>
<div class="outline-text-3" id="text-4-2">
<p>
当目标类型比原类型"小"时, 类型转换是不安全的, 会丢失一些信息. 比如把double转为int.
</p>

<p>
c++允许不安全的类型转换 &#x2014; 当然你可以选择让编译器给出警告.
</p>

<p>
为啥c++允许这种行为呢? 历史原因, 因为c++的祖先c也这么干, 并且有些古老的代码依赖于这种转换.
</p>

<p>
c++11提供了初始化运算符{}, 它遇到unsafe conversion会直接报错:
</p>
<pre class="example">
int x {2.7} // error: double -&gt; int may narrow.
</pre>
</div>
</div>
</div>

</div>
</div>]]></description>
      <pubDate>2016-03-08</pubDate>
      <guid>http://tsubasawp.github.io/blog/2016/03/08/princples-and-practice-using-c++-ch3-reading-note/</guid>
    </item>
    <item>
      <title>princples and practice using c++ ch21 reading note</title>
      <link>http://tsubasawp.github.io/blog/2016/03/06/princples-and-practice-using-c++-ch21-reading-note/</link>
      <description><![CDATA[]]></description>
      <pubDate>2016-03-06</pubDate>
      <guid>http://tsubasawp.github.io/blog/2016/03/06/princples-and-practice-using-c++-ch21-reading-note/</guid>
    </item>
    <item>
      <title>princples and practice using c++ ch20 reading note</title>
      <link>http://tsubasawp.github.io/blog/2016/03/01/princples-and-practice-using-c++-ch20-reading-note/</link>
      <description><![CDATA[]]></description>
      <pubDate>2016-03-04</pubDate>
      <guid>http://tsubasawp.github.io/blog/2016/03/01/princples-and-practice-using-c++-ch20-reading-note/</guid>
    </item>
    <item>
      <title>princples and practice using c++ ch19 reading note</title>
      <link>http://tsubasawp.github.io/blog/2016/02/25/princples-and-practice-using-c++-ch19-reading-note/</link>
      <description><![CDATA[]]></description>
      <pubDate>2016-02-28</pubDate>
      <guid>http://tsubasawp.github.io/blog/2016/02/25/princples-and-practice-using-c++-ch19-reading-note/</guid>
    </item>
    <item>
      <title>GPU Points</title>
      <link>http://tsubasawp.github.io/blog/2016/02/02/gpu-overview</link>
      <description><![CDATA[]]></description>
      <pubDate>2016-02-12</pubDate>
      <guid>http://tsubasawp.github.io/blog/2016/02/02/gpu-overview</guid>
    </item>
    <item>
      <title>PPPUC++ Reading Note</title>
      <link>http://tsubasawp.github.io/blog/2016/01/26/pppuc++-reading-note/</link>
      <description><![CDATA[]]></description>
      <pubDate>2016-02-01</pubDate>
      <guid>http://tsubasawp.github.io/blog/2016/01/26/pppuc++-reading-note/</guid>
    </item>
    <item>
      <title>[阅记] 解忧杂货铺 - 来自上天的祈祷</title>
      <link>http://tsubasawp.github.io/blog/2016/01/30/[阅记]-解忧杂货铺---来自上天的祈祷/</link>
      <description><![CDATA[]]></description>
      <pubDate>2016-01-30</pubDate>
      <guid>http://tsubasawp.github.io/blog/2016/01/30/[阅记]-解忧杂货铺---来自上天的祈祷/</guid>
    </item>
    <item>
      <title>Hello World</title>
      <link>http://tsubasawp.github.io/blog/2016/01/16/hello-world/</link>
      <description><![CDATA[]]></description>
      <pubDate>2016-01-17</pubDate>
      <guid>http://tsubasawp.github.io/blog/2016/01/16/hello-world/</guid>
    </item>
    <item>
      <title>制作下雨场景</title>
      <link>http://tsubasawp.github.io/blog/2016/01/17/rain-scene</link>
      <description><![CDATA[]]></description>
      <pubDate>2016-01-17</pubDate>
      <guid>http://tsubasawp.github.io/blog/2016/01/17/rain-scene</guid>
    </item>
  </channel>
</rss>